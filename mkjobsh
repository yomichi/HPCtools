#!/bin/sh
set -u

usage="usage: $(basename $(readlink -f $0)) [--queue=(cpu|acc|fat|icpu|iacc|ifat)] [--omp=NUM_OPENMP] [--node=NUM_NODE] [--hours=HOURS] [--minutes=MINUTES] [--name=JOB_NAME]"

nnodes=1
nprocs=1
nthreads=24
queue="cpu"
jobname="test"
hours=24
minutes=0

for arg in $@; do
    check_omp=""
    check_omp=${arg#--omp=}
    check_queue=""
    check_queue=${arg#--queue=}
    check_node=""
    check_node=${arg#--node=}
    check_hours=""
    check_hours=${arg#--hours=}
    check_minutes=""
    check_minutes=${arg#--minutes=}
    check_name=""
    check_name=${arg#--name=}
    if [ "$check_omp" != "$arg" ]; then
        if [ "_`echo $check_omp | grep -E '^[0-9]+$'`" == "_" ]; then
            echo $usage
            exit 64
        fi
        nthreads=$check_omp
    elif [ "$check_queue" != "$arg" ]; then
        if [ "_`echo $check_queue | grep -E '(cpu|acc|fat)'`" == "_" ]; then
            echo $usage
            exit 64
        fi
        queue=$check_queue
    elif [ "$check_node" != "$arg" ]; then
        if [ "_`echo $check_node | grep -E '^[0-9]+$'`" == "_" ]; then
            echo $usage
            exit 64
        fi
        nnodes=$check_node
    elif [ "$check_hours" != "$arg" ]; then
        if [ "_`echo $check_hours | grep -E '^[0-9]+$'`" == "_" ]; then
            echo $usage
            exit 64
        fi
        hours=$check_hours
    elif [ "$check_minutes" != "$arg" ]; then
        if [ "_`echo $check_minutes | grep -E '^[0-9]+$'`" == "_" ]; then
            echo $usage
            exit 64
        fi
        minutes=$check_minutes
    elif [ "$check_name" != "$arg" ]; then
        jobname=$check_name
    fi
done

case $nthreads in
    1  ) nprocs=`echo 24 \* $nnodes | bc -l` ;;
    2  ) nprocs=`echo 12 \* $nnodes | bc -l` ;;
    3  ) nprocs=`echo 8 \* $nnodes | bc -l` ;;
    4  ) nprocs=`echo 6 \* $nnodes | bc -l` ;;
    6  ) nprocs=`echo 4 \* $nnodes | bc -l` ;;
    8  ) nprocs=`echo 3 \* $nnodes | bc -l` ;;
    12 ) nprocs=`echo 2 \* $nnodes | bc -l` ;;
    24 ) nprocs=`echo 1 \* $nnodes | bc -l` ;;
    *  ) echo "Invalid input: --omp=<NUM_OPENMP> should be divisor of 24."; exit 64;; 
esac

case $queue in
    "cpu" )
        if [ $nnodes -le 4 ]; then
            queue=F4cpu
        elif [ $nnodes -le 36 ]; then
            queue=F36cpu
        else
            queue=F144cpu
        fi;;
    "acc" )
        if [ $nnodes -le 18 ]; then
            queue=F18acc
        else
            queue=F72acc
        fi;;
    "fat" )
        queue=F2fat;;
    "icpu" )
        queue=i18cpu
        hours=0
        minutes=30;;
    "iacc" )
        queue=i9acc
        hours=0
        minutes=30;;
    "ifat" )
        queue=i1fat
        hours=0
        minutes=30;;
    *)
        echo $usage
        exit 64;;
esac

M=$(echo "scale=0; $hours * 60 + $minutes"  | bc -l)
h=$(echo "scale=0; $M / 60" | bc -l)
m=$(echo "scale=0; $M % 60" | bc -l)

if [ $M -gt 1440 ] ; then
  queue="L$(echo $queue | cut -c 2-)"
fi

prof=".${SHELL##*/}rc"

cat << END
#!${SHELL}
#QSUB -queue $queue
#QSUB -node $nnodes
#QSUB -omp $nthreads
#QSUB -mpi $nprocs
#QSUB -place pack
#QSUB -over false
#PBS -l walltime=$(printf "%02d" $h):$(printf "%02d" $m):00
#PBS -N $jobname
#PBS -o /dev/null
#PBS -e /dev/null

cd \${PBS_O_WORKDIR}
. /etc/profile.d/modules.sh
module load intel mpt

. \${HOME}/${prof}

jid=\$(echo \$PBS_JOBID | cut -d . -f 1,1)

cout="std.out.\$jid"
cerr="std.err.\$jid"

END
